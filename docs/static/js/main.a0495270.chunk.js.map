{"version":3,"sources":["Components/Menu.js","Components/Forminfo.js","Components/Charactersheet.js","Components/MultiComp.js","App.js","serviceWorker.js","index.js"],"names":["Menus","Menu1","state","handleItemClick","e","name","setState","activeItem","this","Menu","Item","active","onClick","React","Component","Menu2","Menu3","setSelectOptions","obj","tempObject","_key","push","key","text","value","skillSelect","Athletics","other","Acrobatics","Arcana","toolProfSelect","Thieves","Instrument","Jewelers","languageSelect","Common","Dwarven","Abyssal","featureSelect","placeholderFeature1","placeholderFeature2","placeholderFeature3","FormInfo","BasicInfo","props","Fragment","Form","Group","Input","label","width","AbilityTable","abilities","headers","id","base","raceMod","otherMod","elems","ability","forEach","i","Table","Row","Cell","fluid","type","size","updateAbilityScore","headerCells","map","header","HeaderCell","fillStateElems","unstackable","striped","textAlign","compact","Header","Body","Background","as","dividing","inline","Button","Dropdown","placeholder","multiple","search","selection","options","Radio","Personality","TextArea","rows","Char","Container","className","method","Segment","Grid","columns","stackable","divided","stretched","Column","panes","menuItem","pane","content","Tabs","Tab","renderActiveOnly","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a0495270.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Menu } from 'semantic-ui-react';\r\n\r\nclass Menu1 extends React.Component {\r\n  state = {}\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n  render() {\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          name='editorials'\r\n          active={activeItem === 'editorials'}\r\n          onClick={this.handleItemClick}\r\n        >\r\n          Item 1\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          name='reviews'\r\n          active={activeItem === 'reviews'}\r\n          onClick={this.handleItemClick}\r\n        >\r\n          Item 2\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          name='upcomingEvents'\r\n          active={activeItem === 'upcomingEvents'}\r\n          onClick={this.handleItemClick}\r\n        >\r\n          Item 3\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass Menu2 extends React.Component {\r\n  state = {}\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n  render() {\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          name='i4'\r\n          active={activeItem === 'i4'}\r\n          onClick={this.handleItemClick}\r\n        >\r\n          Item 4\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          name='i5'\r\n          active={activeItem === 'i5'}\r\n          onClick={this.handleItemClick}\r\n        >\r\n          Item 5\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          name='i6'\r\n          active={activeItem === 'i6'}\r\n          onClick={this.handleItemClick}\r\n        >\r\n          Item 6\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\n\r\nclass Menu3 extends React.Component {\r\n  state = {}\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n  render() {\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <Menu >\r\n        <Menu.Item\r\n          name='i7'\r\n          active={activeItem === 'i7'}\r\n          onClick={this.handleItemClick}\r\n        >\r\n          Item 7\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          name='i8'\r\n          active={activeItem === 'i8'}\r\n          onClick={this.handleItemClick}\r\n        >\r\n          Item 8\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          name='i9'\r\n          active={activeItem === 'i9'}\r\n          onClick={this.handleItemClick}\r\n        >\r\n          Item 9\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\n\r\nconst Menus = { Menu1, Menu2, Menu3 };\r\n\r\nexport default Menus;","import React from 'react';\r\nimport { Form, Header, Table, Dropdown } from 'semantic-ui-react';\r\n\r\nconst skills = {\r\n  Athletics: {value: 0, other: \"placeholder?\"},\r\n  Acrobatics: {value: 0, other: \"placeholder?\"},\r\n  Arcana: {value: 0, other: \"placeholder?\"}\r\n};\r\nconst toolProfs = {\r\n  Thieves: {value: 0, other: \"placeholder?\"},\r\n  Instrument: {value: 0, other: \"placeholder?\"},\r\n  Jewelers: {value: 0, other: \"placeholder?\"}\r\n};\r\nconst languages = {\r\n  Common: {value: 0, other: \"placeholder?\"},\r\n  Dwarven: {value: 0, other: \"placeholder?\"},\r\n  Abyssal: {value: 0, other: \"placeholder?\"}\r\n};\r\nconst features = {\r\n  placeholderFeature1: {value: 0, other: \"placeholder?\"},\r\n  placeholderFeature2: {value: 0, other: \"placeholder?\"},\r\n  placeholderFeature3: {value: 0, other: \"placeholder?\"}\r\n}\r\n\r\nfunction setSelectOptions(obj) {\r\n  let tempObject = [];\r\n  for (let _key in obj) {\r\n    tempObject.push(\r\n      {key: _key, text: _key, value: _key}\r\n    );\r\n  };\r\n  return tempObject;\r\n}\r\n\r\nconst skillSelect = setSelectOptions(skills);\r\nconst toolProfSelect = setSelectOptions(toolProfs);\r\nconst languageSelect = setSelectOptions(languages);\r\nconst featureSelect = setSelectOptions(features);\r\nfunction BasicInfo(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <Form.Group>\r\n        <Form.Input label=\"Character name\" width={6} />,\r\n          <Form.Input label=\"Player name\" width={6} />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Input label=\"Race\" />,\r\n        <Form.Input label=\"Proficiency\" width={2} />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Input label=\"HP\" width={2} />,\r\n        <Form.Input label=\"AC\" width={2} />,\r\n        <Form.Input label=\"Initiative\" width={2} />,\r\n        <Form.Input label=\"Speed\" width={2} />\r\n      </Form.Group>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nclass AbilityTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.abilities = [\"str\", \"dex\", \"con\", \"int\", \"wis\", \"char\"];\r\n    this.headers = [\"Ability\", \"Base\", \"Race\", \"Other\", \"Sum\"];\r\n    this.state = {\r\n      abilities: [\r\n        { name: \"Strength\", id: \"str\", base: 0, raceMod: 0, otherMod: 0 },\r\n        { name: \"Dexterity\", id: \"dex\", base: 0, raceMod: 0, otherMod: 0 },\r\n        { name: \"Constition\", id: \"con\", base: 0, raceMod: 0, otherMod: 0 },\r\n        { name: \"Intelligence\", id: \"int\", base: 0, raceMod: 0, otherMod: 0 },\r\n        { name: \"Wisdom\", id: \"wis\", base: 0, raceMod: 0, otherMod: 0 },\r\n        { name: \"Charisma\", id: \"char\", base: 0, raceMod: 0, otherMod: 0 },\r\n      ],\r\n      elems: []\r\n    };\r\n  }\r\n\r\n  updateAbilityScore(ability) {\r\n    return ability.base + ability.raceMod + ability.otherMod;\r\n  }\r\n\r\n  fillStateElems() {\r\n    this.state.abilities.forEach((ability, i) => {\r\n      let key = ability.id;\r\n      this.state.elems.push(\r\n        <Table.Row key={\"row-\" + key}>\r\n          <Table.Cell key={key + \"-name\"} >{ability.name}</Table.Cell>\r\n          <Table.Cell key={key + \"-base\"} >\r\n            <Form.Input id={ability.id} fluid type=\"number\" size=\"mini\" value={ability.base} />\r\n          </Table.Cell>\r\n          <Table.Cell key={key + \"-race\"} >{ability.raceMod}</Table.Cell>\r\n          <Table.Cell key={key + \"-other\"} >{ability.otherMod}</Table.Cell>\r\n          <Table.Cell key={key + \"-sum\"} >{this.updateAbilityScore(ability)}</Table.Cell>\r\n        </Table.Row>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let headerCells = this.headers.map((header, i) => <Table.HeaderCell key={i}>{header}</Table.HeaderCell>);\r\n\r\n    this.fillStateElems();\r\n\r\n    return (\r\n      <Table unstackable striped textAlign=\"center\" compact>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            {headerCells}\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {this.state.elems}\r\n        </Table.Body>\r\n\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction Background(props) {\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Header as=\"h4\" dividing>Background</Header>,\r\n    <Form.Group inline>\r\n      <Form.Input label=\"Name:\" />\r\n      <Form.Button label=\"&nbsp;\">Create new</Form.Button>\r\n    </Form.Group>,\r\n    <Form.Group inline>\r\n      <Dropdown \r\n        placeholder=\"Select two skills\" \r\n        fluid \r\n        multiple \r\n        search\r\n        selection \r\n        options={skillSelect} \r\n      />\r\n    </Form.Group>,\r\n    <Form.Group inline>\r\n      <Form.Radio label=\"Tool\" value=\"tool1\"/>\r\n      <Form.Radio label=\"Language\" value=\"lang1\"/>\r\n      - Divider -\r\n      <Form.Radio label=\"Tool\" value=\"tool2\"/>\r\n      <Form.Radio label=\"Language\" value=\"lang2\"/>\r\n    </Form.Group>,\r\n    <Form.Group>\r\n      <Dropdown \r\n        placeholder=\"Select a proficiency\" \r\n        fluid\r\n        search\r\n        selection \r\n        options={toolProfSelect} \r\n      />\r\n      <Dropdown\r\n        placeholder=\"Select a language\" \r\n        fluid\r\n        search\r\n        selection \r\n        options={languageSelect} \r\n      />\r\n    </Form.Group>\r\n    <Form.Group>\r\n      <Dropdown\r\n        placeholder=\"Select a feature\" \r\n        fluid\r\n        search\r\n        selection \r\n        options={featureSelect} \r\n      />\r\n    </Form.Group>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction Personality(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <Form.TextArea key={\"persTraits\"} rows={2} label=\"Personality traits\" />\r\n      <Form.TextArea key={\"ideals\"} rows={1} label=\"Ideals\" />\r\n      <Form.TextArea key={\"bonds\"} rows={1} label=\"Bonds\" />\r\n      <Form.TextArea key={\"flaws\"} rows={1} label=\"Flaws\" />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\nconst FormInfo = { BasicInfo, AbilityTable, Background, Personality };\r\n\r\nexport default FormInfo;","import React from 'react';\r\nimport { Container, Form, Grid, Segment } from 'semantic-ui-react';\r\nimport FormInfo from \"./Forminfo.js\";\r\nimport '../App.css';\r\nimport { tsConstructorType } from '@babel/types';\r\nclass Char extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    //this.handler = this.handler.bind(this);\r\n  }\r\n  render() {\r\n    return (\r\n      <Container className=\"App\">\r\n        <Form name=\"formm\" method=\"get\">\r\n\r\n          {/**/}\r\n          <Segment>\r\n            {/* Basic information */}\r\n            {/* First Row - wrapping around the first row of columns. */}\r\n            <Grid columns={2} stackable divided>\r\n              {/* Grid Column 1 */}\r\n              <Grid.Row stretched>\r\n                <Grid.Column stretched>\r\n\r\n                  <Segment>\r\n                    <FormInfo.BasicInfo />\r\n                  </Segment>\r\n\r\n                </Grid.Column>\r\n\r\n                {/* Grid Column 2 */}\r\n                <Grid.Column>\r\n\r\n                  <FormInfo.AbilityTable />\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n\r\n              {/* -------------------------------------------------------------- */}\r\n\r\n              {/* Personality and background */}\r\n              {/* Second Row - wrapping around the sceond row of columns */}\r\n              {/* Grid Column 1 */}\r\n              <Grid.Row>\r\n                <Grid.Column>\r\n                  <FormInfo.Background />\r\n                </Grid.Column>\r\n\r\n                {/* Grid Column 2 */}\r\n                <Grid.Column>\r\n                  <FormInfo.Personality />\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n\r\n              {/* -------------------------------------------------------------- */}\r\n\r\n              {/* Personality and description */}\r\n              {/* Third Row - wrapping around the third row of columns */}\r\n              {/* Grid Column 1 */}\r\n              <Grid.Row>\r\n                <Grid.Column>\r\n\r\n                </Grid.Column>\r\n\r\n                {/* Grid Column 2 */}\r\n                <Grid.Column>\r\n\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n          <Form.Button label=\"asd\" onClick=\"testResults(this.form)\">asd</Form.Button>\r\n        </Form>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction testResults (form) {\r\n  let TestVar = form.inputbox.value;\r\n  alert (\"You typed: \" + TestVar);\r\n}\r\n\r\nexport default Char;","import React from 'react';\r\nimport { Tab, Container} from 'semantic-ui-react';\r\nimport Menus from './Menu';\r\nimport  Char from './Charactersheet';\r\n//import {Comp, Another} from './small';\r\n\r\nconst panes = [\r\n    { \r\n    menuItem: 'Character sheet', \r\n    pane: \r\n    {   \r\n        key: 'tab1',\r\n        content:<Char /> }\r\n    },\r\n    { \r\n    menuItem: 'Tab 2', \r\n    pane: \r\n    {   \r\n        key: 'tab2',\r\n        content:<Menus.Menu1 /> }\r\n    },\r\n    { \r\n    menuItem: 'Tab 3', \r\n    pane: \r\n    {   \r\n        key: 'tab3',\r\n        content:<Menus.Menu2 /> }\r\n    },\r\n  ]\r\n/*export default class Tabs{\r\n    render(){\r\n        return(\r\n            <div>\r\n            \r\n            \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}*/\r\nconst Tabs = () =>(\r\n    <div>\r\n        <Tab panes={panes} renderActiveOnly={false} />\r\n        \r\n    </div>\r\n)\r\n\r\nexport default Tabs\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Fragment } from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\nimport Tabs from './Components/MultiComp';\r\n\r\n\r\n\r\nconst App = () => (\r\n\r\n  <Fragment>\r\n    <Container>\r\n      <Tabs />\r\n    </Container>\r\n  </Fragment>\r\n  \r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport '../src/styles.css';\r\n\r\nimport './index.css';\r\nimport './test.js';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}